<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="Wavee.UI.WinUI.Views.Shell.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Wavee.UI.WinUI.Controls"
    xmlns:controls1="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:Wavee.UI.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:CommunityToolkit.WinUI.UI.Media"
    xmlns:playback="using:Wavee.UI.WinUI.Views.Playback"
    xmlns:system="using:System"
    xmlns:templateSelectors="using:Wavee.UI.WinUI.TemplateSelectors"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:viewModels="using:Wavee.UI.Features.Navigation.ViewModels"
    xmlns:viewModels1="using:Wavee.UI.Features.Playback.ViewModels"
    xmlns:viewModels2="using:Wavee.UI.Features.Search.ViewModels"
    xmlns:viewModels3="using:Wavee.UI.Features.Shell.ViewModels"
    x:Name="Root"
    DataContextChanged="ShellView_OnDataContextChanged"
    mc:Ignorable="d">
    <UserControl.Resources>
        <media:AttachedCardShadow
            x:Key="CommonShadow"
            CornerRadius="6"
            Opacity=".3"
            Offset="2" />
        <converters:SidebarViewModelToAppropriateTitleConverter x:Key="SidebarViewModelToAppropriateTitleConverter" />
        <converters:SidebarViewModelToAppropriateIconConverter x:Key="SidebarViewModelToAppropriateIconConverter" />
        <DataTemplate x:Key="NavigationViewItemTemplate" x:DataType="viewModels:NavigationItemViewModel">
            <NavigationViewItem
                Content="{x:Bind Converter={StaticResource SidebarViewModelToAppropriateTitleConverter}}"
                Icon="{x:Bind Converter={StaticResource SidebarViewModelToAppropriateIconConverter}}"
                Tag="{x:Bind}" />
        </DataTemplate>
        <StaticResource x:Key="Original" ResourceKey="NavigationViewContentGridBorderBrush" />

        <DataTemplate x:Key="GenericSearchSuggestion" x:DataType="viewModels2:SearchSuggestionEntityViewModel">
            <StackPanel Orientation="Vertical" Spacing="8">
                <MenuFlyoutSeparator />
                <RelativePanel>
                    <Image
                        x:Name="image"
                        Width="40"
                        Height="40"
                        Source="{Binding ImageUrl}" />

                    <TextBlock
                        x:Name="Name"
                        Margin="6,0"
                        FontSize="14"
                        RelativePanel.AlignTopWith="image"
                        RelativePanel.RightOf="image"
                        Text="{x:Bind Name}"
                        TextTrimming="CharacterEllipsis" />

                    <TextBlock
                        Margin="6,0"
                        FontSize="13"
                        Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                        Opacity=".5"
                        RelativePanel.Below="Name"
                        RelativePanel.RightOf="image"
                        Text="{x:Bind Subtitle}" />
                </RelativePanel>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ArtistSearchSuggestion" x:DataType="viewModels2:SearchSuggestionEntityViewModel">
            <StackPanel Orientation="Vertical" Spacing="8">
                <MenuFlyoutSeparator />
                <RelativePanel>
                    <PersonPicture
                        x:Name="image"
                        Width="40"
                        Height="40"
                        ProfilePicture="{Binding ImageUrl}" />

                    <TextBlock
                        x:Name="Name"
                        Margin="6,0"
                        RelativePanel.AlignTopWith="image"
                        RelativePanel.RightOf="image"
                        Text="{x:Bind Name}" />

                    <TextBlock
                        Margin="6,0"
                        Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                        Opacity=".5"
                        RelativePanel.Below="Name"
                        RelativePanel.RightOf="image"
                        Text="{x:Bind Subtitle}" />
                </RelativePanel>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="QuerySearchSuggestion" x:DataType="viewModels2:SearchSuggestionQueryViewModel">
            <RelativePanel>
                <FontIcon
                    x:Name="QueryIcon"
                    FontFamily="/Assets/Fonts/MediaPlayerIcons.ttf#Media Player Fluent Icons"
                    Glyph="&#xE721;" />

                <controls:QueryHitTextBlock
                    Margin="8,0"
                    RelativePanel.AlignVerticalCenterWith="QueryIcon"
                    RelativePanel.RightOf="QueryIcon"
                    Terms="{x:Bind Terms}" />
            </RelativePanel>
        </DataTemplate>

        <templateSelectors:SearchSuggestionsItemTemplateSelector
            x:Key="SearchSuggestionsItemTemplateSelector"
            ArtistTemplate="{StaticResource ArtistSearchSuggestion}"
            GenericTemplate="{StaticResource GenericSearchSuggestion}"
            QueryTemplate="{StaticResource QuerySearchSuggestion}" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition x:Name="RightSidebarColumn" Width="Auto" />
        </Grid.ColumnDefinitions>
        <NavigationView
            IsBackButtonVisible="Collapsed"
            ItemInvoked="NavigationView_OnItemInvoked"
            MenuItemTemplate="{StaticResource NavigationViewItemTemplate}"
            MenuItemsSource="{x:Bind ViewModel.TopNavItems, Mode=OneWay}"
            PaneDisplayMode="Top"
            SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=OneWay}"
            Style="{StaticResource ExtendedNavigationViewStyle}">
            <NavigationView.Resources>
                <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush" Color="Transparent" />
            </NavigationView.Resources>
            <NavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    x:Name="SuggestBox"
                    ItemTemplateSelector="{StaticResource SearchSuggestionsItemTemplateSelector}"
                    ItemsSource="{x:Bind ViewModel.Search.Suggestions}"
                    LayoutUpdated="FrameworkElement_OnLayoutUpdated"
                    PlaceholderText="Find..."
                    QueryIcon="Find"
                    QuerySubmitted="AutoSuggestBox_OnQuerySubmitted"
                    SuggestionChosen="AutoSuggestBox_OnSuggestionChosen"
                    Text="{x:Bind ViewModel.Search.Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextChanged="AutoSuggestBox_OnTextChanged"
                    UpdateTextOnSelect="False">
                    <AutoSuggestBox.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Padding" Value="12,4" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </AutoSuggestBox.ItemContainerStyle>
                </AutoSuggestBox>
            </NavigationView.AutoSuggestBox>
            <NavigationView.PaneHeader>
                <Grid Margin="0,0,0,0" Padding="12,12,0,0">
                    <StackPanel Orientation="Horizontal" Spacing="4">
                        <Button
                            Command="{Binding Navigation.GoBackCommand}"
                            IsEnabled="{Binding Navigation.CanGoBack, Mode=OneWay}"
                            Style="{StaticResource NavigationRoundButtonStyle}">
                            <FontIcon
                                FontFamily="{StaticResource FluentIcons}"
                                FontSize="14"
                                Glyph="&#xE76B;" />
                        </Button>
                        <Button
                            Command="{Binding Navigation.GoNextCommand}"
                            IsEnabled="{Binding Navigation.CanGoNext, Mode=OneWay}"
                            Style="{StaticResource NavigationRoundButtonStyle}">
                            <FontIcon
                                FontFamily="{StaticResource FluentIcons}"
                                FontSize="14"
                                Glyph="&#xE76C;" />
                        </Button>
                        <TextBlock
                            Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            FontWeight="ExtraBold"
                            Opacity=".5"
                            Text="Wavee" />
                    </StackPanel>
                </Grid>
            </NavigationView.PaneHeader>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border Grid.Row="1" Background="{ThemeResource LayerFillColorDefaultBrush}">
                    <Frame x:Name="NavigationFrame" />
                </Border>

                <Border Grid.Row="0">
                    <NavigationView
                        IsBackButtonVisible="Collapsed"
                        IsSettingsVisible="False"
                        ItemInvoked="NavigationView_OnItemInvoked"
                        MenuItemTemplate="{StaticResource NavigationViewItemTemplate}"
                        MenuItemsSource="{x:Bind ViewModel.SelectedItem.Children, Mode=OneWay}"
                        PaneDisplayMode="Top"
                        SelectedItem="{x:Bind ViewModel.SelectedItem.SelectedItem, Mode=OneWay}"
                        Visibility="{x:Bind HasSubItemsThenVisible(ViewModel.SelectedItem.Children), Mode=OneWay}" />
                </Border>
            </Grid>
        </NavigationView>

        <Grid
            Height="80"
            Margin="32,12"
            VerticalAlignment="Bottom"
            ui:Effects.Shadow="{StaticResource CommonShadow}">
            <FlipView
                Background="{ThemeResource AcrylicBackgroundFillColorBaseBrush}"
                CornerRadius="6"
                ItemsSource="{x:Bind ViewModel.Playback.Players}"
                SelectedItem="{x:Bind ViewModel.Playback.ActivePlayer, Mode=TwoWay}">
                <FlipView.ItemTemplate>
                    <DataTemplate x:DataType="viewModels1:PlaybackPlayerViewModel">
                        <playback:PlaybackPlayerControl DataContext="{Binding}" SelectedSidebarComponent="{Binding ElementName=Root, Path=ViewModel.RightSidebar.SelectedItem, Mode=TwoWay}" />
                    </DataTemplate>
                </FlipView.ItemTemplate>
            </FlipView>
        </Grid>

        <Grid
            x:Name="RightSidebarGrid"
            Grid.Column="1"
            Width="440"
            Background="{ThemeResource LayerFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1,1,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Frame x:Name="RightSidebarNavigationFrame" Grid.Row="2" />
            <controls1:Segmented
                Grid.Row="1"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                Background="Transparent"
                BorderThickness="0"
                SelectedIndex="{x:Bind ToIndex(ViewModel.RightSidebar.SelectedItem), Mode=TwoWay, BindBack=SetItem}"
                SelectionChanged="SidebarItemSelectionChanged">
                <controls1:Segmented.Items>
                    <controls1:SegmentedItem Content="{x:Bind ViewModel.RightSidebar.Items[0], Converter={StaticResource SidebarViewModelToAppropriateTitleConverter}}" Icon="{x:Bind ViewModel.RightSidebar.Items[0], Converter={StaticResource SidebarViewModelToAppropriateIconConverter}}" />
                    <controls1:SegmentedItem Content="{x:Bind ViewModel.RightSidebar.Items[1], Converter={StaticResource SidebarViewModelToAppropriateTitleConverter}}" Icon="{x:Bind ViewModel.RightSidebar.Items[1], Converter={StaticResource SidebarViewModelToAppropriateIconConverter}}" />
                </controls1:Segmented.Items>
            </controls1:Segmented>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="sidebarNotOpen">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind Negate(ViewModel.RightSidebar.IsOpen), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RightSidebarGrid.Visibility" Value="Collapsed" />
                        <Setter Target="RightSidebarColumn.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="sidebarOpenNotDocked">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind CompositeBool(ViewModel.RightSidebar.IsOpen, ViewModel.RightSidebar.IsDocked, x:True, x:False), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RightSidebarGrid.Visibility" Value="Visible" />
                        <Setter Target="RightSidebarGrid.(Grid.Column)" Value="0" />
                        <Setter Target="RightSidebarGrid.HorizontalAlignment" Value="Right" />

                        <Setter Target="RightSidebarColumn.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="sidebarOpenDocked">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind CompositeBool(ViewModel.RightSidebar.IsOpen, ViewModel.RightSidebar.IsDocked, x:True, x:False), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RightSidebarGrid.Visibility" Value="Visible" />
                        <Setter Target="RightSidebarGrid.(Grid.Column)" Value="1" />
                        <Setter Target="RightSidebarGrid.HorizontalAlignment" Value="Stretch" />
                        <Setter Target="RightSidebarColumn.Width" Value="600" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>

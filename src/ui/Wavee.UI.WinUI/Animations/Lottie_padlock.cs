//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile lottie_padlock.json
//       
//       Input file:
//           lottie_padlock.json (19356 bytes created 0:12+09:00 May 17 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   154 |
// |--------------------------+-------|
// | Expression animators     |    16 |
// | KeyFrame animators       |    12 |
// | Reference parameters     |    17 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     3 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     8 |
// | CompositionSpriteShapes  |    15 |
// |--------------------------+-------|
// | Brushes                  |     7 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        Lock.AE
    // Frame rate:  60 fps
    // Frame count: 110
    // Duration:    1833.3 mS
    // ____________________________________________________
    // | Marker | Constant | Frame |  mS   |   Progress   |
    // |________|__________|_______|_______|______________|
    // | 1      | M_1      |    55 | 916.7 | 0.500454545F |
    // ----------------------------------------------------
    public sealed class Lottie_padlock
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 1.833 seconds.
        internal const long c_durationTicks = 18333333;

        // Marker: 1.
        internal const float M_1 = 0.500454545F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Lottie_padlock_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 110d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 110d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "1", 0.500454545454545 },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Lottie_padlock_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 18333333;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF;
            CompositionColorBrush _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF;
            CompositionColorBrush _animatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF;
            CompositionColorBrush _colorBrush_AlmostDarkGray_FF999999;
            CompositionColorBrush _colorBrush_AlmostDarkGray_FFB3B3B3;
            CompositionColorBrush _colorBrush_AlmostGoldenrod_FFF79225;
            CompositionColorBrush _colorBrush_AlmostSandyBrown_FFFAAF3A;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionContainerShape _containerShape_5;
            CompositionContainerShape _containerShape_6;
            CompositionContainerShape _containerShape_7;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<37.25, 37.25>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(3F, 37F));
                    builder.AddCubicBezier(new Vector2(3F, 18.2070007F), new Vector2(18.2070007F, 3F), new Vector2(37F, 3F));
                    builder.AddLine(new Vector2(37F, -37F));
                    builder.AddCubicBezier(new Vector2(-3.90199995F, -37F), new Vector2(-37F, -3.90199995F), new Vector2(-37F, 37F));
                    builder.AddLine(new Vector2(3F, 37F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<20.25, 32.319>
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-20F, 32.0690002F));
                    builder.AddLine(new Vector2(-20F, -32.0690002F));
                    builder.AddLine(new Vector2(-11.6520004F, -32.0690002F));
                    builder.AddLine(new Vector2(20F, -32.0690002F));
                    builder.AddLine(new Vector2(20F, 32.0690002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<20.25, 56.25>
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-20F, 56F));
                    builder.AddLine(new Vector2(-20F, -56F));
                    builder.AddLine(new Vector2(20F, -56F));
                    builder.AddLine(new Vector2(20F, 56F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<75.75, 221.75>
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(20F, 0F));
                    builder.AddCubicBezier(new Vector2(20F, 11.0459995F), new Vector2(11.0459995F, 20F), new Vector2(0F, 20F));
                    builder.AddCubicBezier(new Vector2(-11.0459995F, 20F), new Vector2(-20F, 11.0459995F), new Vector2(-20F, 0F));
                    builder.AddCubicBezier(new Vector2(-20F, -11.0459995F), new Vector2(-11.0459995F, -20F), new Vector2(0F, -20F));
                    builder.AddCubicBezier(new Vector2(11.0459995F, -20F), new Vector2(20F, -11.0459995F), new Vector2(20F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<37.25, 37.25>
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-3F, 37F));
                    builder.AddCubicBezier(new Vector2(-3F, 18.2070007F), new Vector2(-18.2070007F, 3F), new Vector2(-37F, 3F));
                    builder.AddLine(new Vector2(-37F, -37F));
                    builder.AddCubicBezier(new Vector2(3.90199995F, -37F), new Vector2(37F, -3.90199995F), new Vector2(37F, 37F));
                    builder.AddLine(new Vector2(-3F, 37F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<20.25, 20.078>
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(20F, 0.00100000005F));
                    builder.AddCubicBezier(new Vector2(20F, 10.9510002F), new Vector2(11.0459995F, 19.8269997F), new Vector2(0F, 19.8269997F));
                    builder.AddCubicBezier(new Vector2(-11.0459995F, 19.8269997F), new Vector2(-20F, 10.9510002F), new Vector2(-20F, 0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-20F, -10.9499998F), new Vector2(-11.0459995F, -19.8269997F), new Vector2(0F, -19.8269997F));
                    builder.AddCubicBezier(new Vector2(11.0459995F, -19.8269997F), new Vector2(20F, -10.9499998F), new Vector2(20F, 0.00100000005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<59.096996, 168.75>
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(45.3269997F, 59F));
                    builder.AddLine(new Vector2(-31.1739998F, 59F));
                    builder.AddCubicBezier(new Vector2(-38.9900017F, 59F), new Vector2(-45.3269997F, 52.6640015F), new Vector2(-45.3269997F, 44.8479996F));
                    builder.AddLine(new Vector2(-45.3269997F, -44.8479996F));
                    builder.AddCubicBezier(new Vector2(-45.3269997F, -52.6640015F), new Vector2(-38.9900017F, -59F), new Vector2(-31.1739998F, -59F));
                    builder.AddLine(new Vector2(45.3269997F, -59F));
                    builder.AddLine(new Vector2(45.3269997F, 59F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<149.75, 168.75>
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-45.3269997F, 59F));
                    builder.AddLine(new Vector2(31.1739998F, 59F));
                    builder.AddCubicBezier(new Vector2(38.9900017F, 59F), new Vector2(45.3269997F, 52.6640015F), new Vector2(45.3269997F, 44.8479996F));
                    builder.AddLine(new Vector2(45.3269997F, -44.8479996F));
                    builder.AddCubicBezier(new Vector2(45.3269997F, -52.6640015F), new Vector2(38.9900017F, -59F), new Vector2(31.1739998F, -59F));
                    builder.AddLine(new Vector2(-45.3269997F, -59F));
                    builder.AddLine(new Vector2(-45.3269997F, 59F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<20.84, 14.451>
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14.7309999F, 2.21600008F));
                    builder.AddLine(new Vector2(-8.24199963F, 12.4090004F));
                    builder.AddCubicBezier(new Vector2(-12.2799997F, 14.2010002F), new Vector2(-17.0060005F, 12.3800001F), new Vector2(-18.7980003F, 8.3409996F));
                    builder.AddCubicBezier(new Vector2(-20.5900002F, 4.30299997F), new Vector2(-18.7689991F, -0.423999995F), new Vector2(-14.7309999F, -2.21600008F));
                    builder.AddLine(new Vector2(8.24199963F, -12.4090004F));
                    builder.AddCubicBezier(new Vector2(12.2799997F, -14.2010002F), new Vector2(17.0060005F, -12.3800001F), new Vector2(18.7980003F, -8.3409996F));
                    builder.AddCubicBezier(new Vector2(20.5900002F, -4.30299997F), new Vector2(18.7689991F, 0.423999995F), new Vector2(14.7309999F, 2.21600008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<20.817, 8.25>
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.5670004F, 8F));
                    builder.AddLine(new Vector2(-12.5670004F, 8F));
                    builder.AddCubicBezier(new Vector2(-16.9850006F, 8F), new Vector2(-20.5669994F, 4.41800022F), new Vector2(-20.5669994F, 0F));
                    builder.AddCubicBezier(new Vector2(-20.5669994F, -4.41800022F), new Vector2(-16.9850006F, -8F), new Vector2(-12.5670004F, -8F));
                    builder.AddLine(new Vector2(12.5670004F, -8F));
                    builder.AddCubicBezier(new Vector2(16.9850006F, -8F), new Vector2(20.5669994F, -4.41800022F), new Vector2(20.5669994F, 0F));
                    builder.AddCubicBezier(new Vector2(20.5669994F, 4.41800022F), new Vector2(16.9850006F, 8F), new Vector2(12.5670004F, 8F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<20.549, 15.155>
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-14.8360004F, 1.33700001F));
                    builder.AddLine(new Vector2(7.48999977F, 12.8760004F));
                    builder.AddCubicBezier(new Vector2(11.4160004F, 14.9040003F), new Vector2(16.2420006F, 13.3669996F), new Vector2(18.2700005F, 9.44099998F));
                    builder.AddCubicBezier(new Vector2(20.2989998F, 5.5170002F), new Vector2(18.7619991F, 0.690999985F), new Vector2(14.8369999F, -1.33800006F));
                    builder.AddLine(new Vector2(-7.48999977F, -12.8760004F));
                    builder.AddCubicBezier(new Vector2(-11.415F, -14.9040003F), new Vector2(-16.2409992F, -13.368F), new Vector2(-18.2709999F, -9.44299984F));
                    builder.AddCubicBezier(new Vector2(-20.2989998F, -5.5170002F), new Vector2(-18.7619991F, -0.690999985F), new Vector2(-14.8360004F, 1.33700001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<149.74901, 233.07199>
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-3.7249999F, 13.8389997F));
                    builder.AddCubicBezier(new Vector2(0.389999986F, 13.8389997F), new Vector2(3.7249999F, 10.5030003F), new Vector2(3.7249999F, 6.38800001F));
                    builder.AddLine(new Vector2(3.7249999F, -13.8389997F));
                    builder.AddLine(new Vector2(-3.7249999F, -13.8389997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<142.298, 233.07199>
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(3.72600007F, 13.8389997F));
                    builder.AddCubicBezier(new Vector2(-0.388999999F, 13.8389997F), new Vector2(-3.72600007F, 10.5030003F), new Vector2(-3.72600007F, 6.38800001F));
                    builder.AddLine(new Vector2(-3.72600007F, -13.8389997F));
                    builder.AddLine(new Vector2(3.72600007F, -13.8389997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<149.75, 194.75>
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-10.1129999F, 20.2250004F));
                    builder.AddCubicBezier(new Vector2(1.05799997F, 20.2250004F), new Vector2(10.1129999F, 11.1700001F), new Vector2(10.1129999F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(10.1129999F, -11.1709995F), new Vector2(1.05799997F, -20.2250004F), new Vector2(-10.1129999F, -20.2250004F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<129.52399, 194.75>
            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(10.1129999F, 20.2250004F));
                    builder.AddCubicBezier(new Vector2(-1.05700004F, 20.2250004F), new Vector2(-10.1129999F, 11.1700001F), new Vector2(-10.1129999F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-10.1129999F, -11.1709995F), new Vector2(-1.05700004F, -20.2250004F), new Vector2(10.1129999F, -20.2250004F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - ShapeGroup: Group 1 Offset:<20.84, 14.451>
            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0x36, 0x99, 0xFF), StepThenHoldEasingFunction());
                // Frame 50.
                // AlmostDodgerBlue_FF3699FF
                result.InsertKeyFrame(0.454545468F, Color.FromArgb(0xFF, 0x36, 0x99, 0xFF), HoldThenStepEasingFunction());
                // Frame 70.
                // SemiTransparentAlmostDodgerBlue_023699FF
                result.InsertKeyFrame(0.636363626F, Color.FromArgb(0x02, 0x36, 0x99, 0xFF), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - ShapeGroup: Group 1 Offset:<20.817, 8.25>
            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0x36, 0x99, 0xFF), StepThenHoldEasingFunction());
                // Frame 50.
                // AlmostDodgerBlue_FF3699FF
                result.InsertKeyFrame(0.454545468F, Color.FromArgb(0xFF, 0x36, 0x99, 0xFF), HoldThenStepEasingFunction());
                // Frame 70.
                // TransparentAlmostDodgerBlue_003699FF
                result.InsertKeyFrame(0.636363626F, Color.FromArgb(0x00, 0x36, 0x99, 0xFF), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - ShapeGroup: Group 1 Offset:<20.549, 15.155>
            // Color
            ColorKeyFrameAnimation ColorAnimation_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFC, 0x36, 0x99, 0xFF), StepThenHoldEasingFunction());
                // Frame 50.
                // SemiTransparentAlmostDodgerBlue_FC3699FF
                result.InsertKeyFrame(0.454545468F, Color.FromArgb(0xFC, 0x36, 0x99, 0xFF), HoldThenStepEasingFunction());
                // Frame 70.
                // TransparentAlmostDodgerBlue_003699FF
                result.InsertKeyFrame(0.636363626F, Color.FromArgb(0x00, 0x36, 0x99, 0xFF), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.84, 14.451>
            CompositionColorBrush AnimatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF()
            {
                if (_animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF != null) { return _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF; }
                var result = _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF = _c.CreateColorBrush();
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.817, 8.25>
            CompositionColorBrush AnimatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF()
            {
                if (_animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF != null) { return _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF; }
                var result = _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF = _c.CreateColorBrush();
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.549, 15.155>
            CompositionColorBrush AnimatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF()
            {
                if (_animatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF != null) { return _animatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF; }
                var result = _animatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF = _c.CreateColorBrush();
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostDarkGray_FF999999()
            {
                return (_colorBrush_AlmostDarkGray_FF999999 == null)
                    ? _colorBrush_AlmostDarkGray_FF999999 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x99, 0x99, 0x99))
                    : _colorBrush_AlmostDarkGray_FF999999;
            }

            CompositionColorBrush ColorBrush_AlmostDarkGray_FFB3B3B3()
            {
                return (_colorBrush_AlmostDarkGray_FFB3B3B3 == null)
                    ? _colorBrush_AlmostDarkGray_FFB3B3B3 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xB3, 0xB3, 0xB3))
                    : _colorBrush_AlmostDarkGray_FFB3B3B3;
            }

            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFF79225()
            {
                return (_colorBrush_AlmostGoldenrod_FFF79225 == null)
                    ? _colorBrush_AlmostGoldenrod_FFF79225 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF7, 0x92, 0x25))
                    : _colorBrush_AlmostGoldenrod_FFF79225;
            }

            CompositionColorBrush ColorBrush_AlmostSandyBrown_FFFAAF3A()
            {
                return (_colorBrush_AlmostSandyBrown_FFFAAF3A == null)
                    ? _colorBrush_AlmostSandyBrown_FFFAAF3A = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFA, 0xAF, 0x3A))
                    : _colorBrush_AlmostSandyBrown_FFFAAF3A;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<37.25, 37.25>
                result.Shapes.Add(SpriteShape_00());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<20.25, 32.319>
                result.Shapes.Add(SpriteShape_01());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<20.25, 56.25>
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<37.25, 37.25>
                result.Shapes.Add(SpriteShape_04());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<20.25, 20.078>
                result.Shapes.Add(SpriteShape_05());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_5()
            {
                if (_containerShape_5 != null) { return _containerShape_5; }
                var result = _containerShape_5 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(20.8400002F, 14.4510002F);
                result.Offset = new Vector2(246.631012F, 119.228989F);
                // ShapeGroup: Group 1 Offset:<20.84, 14.451>
                result.Shapes.Add(SpriteShape_08());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_6()
            {
                if (_containerShape_6 != null) { return _containerShape_6; }
                var result = _containerShape_6 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(20.8169994F, 8.25F);
                result.Offset = new Vector2(251.748001F, 148.576004F);
                // ShapeGroup: Group 1 Offset:<20.817, 8.25>
                result.Shapes.Add(SpriteShape_09());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_7()
            {
                if (_containerShape_7 != null) { return _containerShape_7; }
                var result = _containerShape_7 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(20.5489998F, 15.1549997F);
                result.Offset = new Vector2(247.972F, 166.714996F);
                // ShapeGroup: Group 1 Offset:<20.549, 15.155>
                result.Shapes.Add(SpriteShape_10());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<37.25, 37.25>
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.25, 32.319>
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.25, 56.25>
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
            }

            // - Layer aggregator
            // Offset:<75.75, 221.75>
            CompositionPathGeometry PathGeometry_03()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<37.25, 37.25>
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.25, 20.078>
            CompositionPathGeometry PathGeometry_05()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_05()));
            }

            // - Layer aggregator
            // Offset:<59.096996, 168.75>
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
            }

            // - Layer aggregator
            // Offset:<149.75, 168.75>
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.84, 14.451>
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_08()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.817, 8.25>
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<20.549, 15.155>
            CompositionPathGeometry PathGeometry_10()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // - Layer aggregator
            // Offset:<149.74901, 233.07199>
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_11()));
            }

            // - Layer aggregator
            // Offset:<142.298, 233.07199>
            CompositionPathGeometry PathGeometry_12()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_12()));
            }

            // - Layer aggregator
            // Offset:<149.75, 194.75>
            CompositionPathGeometry PathGeometry_13()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
            }

            // - Layer aggregator
            // Offset:<129.52399, 194.75>
            CompositionPathGeometry PathGeometry_14()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_14()));
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<37.25, 37.25>
                var geometry = PathGeometry_00();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 37.25F, 37.25F), ColorBrush_AlmostDarkGray_FFB3B3B3());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<20.25, 32.319>
                var geometry = PathGeometry_01();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.25F, 32.3190002F), ColorBrush_AlmostDarkGray_FF999999());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<20.25, 56.25>
                var geometry = PathGeometry_02();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.25F, 56.25F), ColorBrush_AlmostDarkGray_FFB3B3B3());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<96, 242>
                var geometry = PathGeometry_03();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 96F, 242F), ColorBrush_AlmostDarkGray_FFB3B3B3());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<37.25, 37.25>
                var geometry = PathGeometry_04();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 37.25F, 37.25F), ColorBrush_AlmostDarkGray_FF999999());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<20.25, 20.078>
                var geometry = PathGeometry_05();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.25F, 20.0779991F), ColorBrush_AlmostDarkGray_FF999999());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<104.673, 228>
                var geometry = PathGeometry_06();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 104.672997F, 228F), ColorBrush_AlmostSandyBrown_FFFAAF3A());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<195.326, 228>
                var geometry = PathGeometry_07();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 195.326004F, 228F), ColorBrush_AlmostGoldenrod_FFF79225());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<20.84, 14.451>
                var geometry = PathGeometry_08();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.8400002F, 14.4510002F), AnimatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<20.817, 8.25>
                var geometry = PathGeometry_09();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.8169994F, 8.25F), AnimatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<20.549, 15.155>
                var geometry = PathGeometry_10();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.5489998F, 15.1549997F), AnimatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<153.72401, 247.161>
                var geometry = PathGeometry_11();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 153.724014F, 247.160995F), ColorBrush_AlmostGoldenrod_FFF79225());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<146.274, 247.161>
                var geometry = PathGeometry_12();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 146.274002F, 247.160995F), ColorBrush_AlmostSandyBrown_FFFAAF3A());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<160.113, 215.226>
                var geometry = PathGeometry_13();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 160.113007F, 215.225998F), ColorBrush_AlmostGoldenrod_FFF79225());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<139.887, 215.226>
                var geometry = PathGeometry_14();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 139.886993F, 215.225998F), ColorBrush_AlmostSandyBrown_FFFAAF3A());;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_0;
            }

            ExpressionAnimation RootProgress()
            {
                if (_rootProgress != null) { return _rootProgress; }
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.
                result.InsertKeyFrame(0.0909090862F, 1F, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(300F, 300F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_1());
                shapes.Add(ContainerShape_2());
                // Offset:<75.75, 221.75>
                shapes.Add(SpriteShape_03());
                shapes.Add(ContainerShape_3());
                shapes.Add(ContainerShape_4());
                // Offset:<59.096996, 168.75>
                shapes.Add(SpriteShape_06());
                // Offset:<149.75, 168.75>
                shapes.Add(SpriteShape_07());
                shapes.Add(ContainerShape_5());
                shapes.Add(ContainerShape_6());
                shapes.Add(ContainerShape_7());
                // Offset:<149.74901, 233.07199>
                shapes.Add(SpriteShape_11());
                // Offset:<142.298, 233.07199>
                shapes.Add(SpriteShape_12());
                // Offset:<149.75, 194.75>
                shapes.Add(SpriteShape_13());
                // Offset:<129.52399, 194.75>
                shapes.Add(SpriteShape_14());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(75.75F, 49.75F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.
                result.InsertExpressionKeyFrame(0.0909090862F, "Pow(1-_.t0,3)*Vector2(75.75,49.75)+(3*Square(1-_.t0)*_.t0*Vector2(75.75,52.417))+(3*(1-_.t0)*Square(_.t0)*Vector2(75.75,70.417))+(Pow(_.t0,3)*Vector2(75.75,65.75))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818187F, new Vector2(75.75F, 65.75F), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818202F, new Vector2(75.75F, 21.75F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.879000008F)));
                // Frame 30.
                result.InsertKeyFrame(0.272727281F, new Vector2(75.75F, 1.75F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.26699999F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(183.75F, 117.75F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.
                result.InsertExpressionKeyFrame(0.0909090862F, "Pow(1-_.t0,3)*Vector2(183.75,117.75)+(3*Square(1-_.t0)*_.t0*Vector2(183.75,116.028))+(3*(1-_.t0)*Square(_.t0)*Vector2(183.75,141.007))+(Pow(_.t0,3)*Vector2(183.75,136.414))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818187F, new Vector2(183.75F, 136.414001F), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818202F, new Vector2(183.75F, 90.75F), CubicBezierEasingFunction_0());
                // Frame 30.
                result.InsertKeyFrame(0.272727281F, new Vector2(183.75F, 74.75F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(75.75F, 117.75F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.
                result.InsertExpressionKeyFrame(0.0909090862F, "Pow(1-_.t0,3)*Vector2(75.75,117.75)+(3*Square(1-_.t0)*_.t0*Vector2(75.75,121.083))+(3*(1-_.t0)*Square(_.t0)*Vector2(75.75,141.417))+(Pow(_.t0,3)*Vector2(75.75,137.75))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818187F, new Vector2(75.75F, 137.75F), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818202F, new Vector2(75.75F, 92.1520004F), CubicBezierEasingFunction_0());
                // Frame 30.
                result.InsertKeyFrame(0.272727281F, new Vector2(75.75F, 74.1520004F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(149.75F, 49.75F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.
                result.InsertExpressionKeyFrame(0.0909090862F, "Pow(1-_.t0,3)*Vector2(149.75,49.75)+(3*Square(1-_.t0)*_.t0*Vector2(149.75,52.417))+(3*(1-_.t0)*Square(_.t0)*Vector2(149.75,70.417))+(Pow(_.t0,3)*Vector2(149.75,65.75))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818187F, new Vector2(149.75F, 65.75F), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818202F, new Vector2(149.75F, 21.75F), CubicBezierEasingFunction_0());
                // Frame 30.
                result.InsertKeyFrame(0.272727281F, new Vector2(149.75F, 1.75F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_4()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(183.75F, 175.095001F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0909090936F, new Vector2(183.75F, 160.095001F), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.181818187F, new Vector2(183.75F, 136.095001F), CubicBezierEasingFunction_0());
                // Frame 30.
                result.InsertKeyFrame(0.272727281F, new Vector2(183.75F, 120.095001F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 26.
                result.InsertKeyFrame(0.236363634F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 40.
                result.InsertKeyFrame(0.363636374F, new Vector2(1.25F, 1.25F), CubicBezierEasingFunction_0());
                // Frame 44.
                result.InsertKeyFrame(0.400000006F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 23.
                result.InsertKeyFrame(0.209090903F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                // Frame 34.
                result.InsertKeyFrame(0.309090912F, new Vector2(1.25F, 1.25F), CubicBezierEasingFunction_0());
                // Frame 38.
                result.InsertKeyFrame(0.345454544F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.181818187F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.272727281F, new Vector2(1.25F, 1.25F), CubicBezierEasingFunction_0());
                // Frame 34.
                result.InsertKeyFrame(0.309090912F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            internal Lottie_padlock_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(300F, 300F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                StartProgressBoundAnimation(_animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF, "Color", ColorAnimation_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF(), RootProgress());
                StartProgressBoundAnimation(_animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF, "Color", ColorAnimation_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF(), RootProgress());
                StartProgressBoundAnimation(_animatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF, "Color", ColorAnimation_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF(), RootProgress());
                StartProgressBoundAnimation(_containerShape_0, "Offset", OffsetVector2Animation_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_1, "Offset", OffsetVector2Animation_1(), RootProgress());
                StartProgressBoundAnimation(_containerShape_2, "Offset", OffsetVector2Animation_2(), RootProgress());
                StartProgressBoundAnimation(_containerShape_3, "Offset", OffsetVector2Animation_3(), RootProgress());
                StartProgressBoundAnimation(_containerShape_4, "Offset", OffsetVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_5, "Scale", ScaleVector2Animation_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_6, "Scale", ScaleVector2Animation_1(), RootProgress());
                StartProgressBoundAnimation(_containerShape_7, "Scale", ScaleVector2Animation_2(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t0", t0ScalarAnimation_0_to_1(), RootProgress());
            }

            public void DestroyAnimations()
            {
                _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_SemiTransparentAlmostDodgerBlue_023699FF.StopAnimation("Color");
                _animatedColorBrush_AlmostDodgerBlue_FF3699FF_to_TransparentAlmostDodgerBlue_003699FF.StopAnimation("Color");
                _animatedColorBrush_SemiTransparentAlmostDodgerBlue_FC3699FF_to_TransparentAlmostDodgerBlue_003699FF.StopAnimation("Color");
                _containerShape_0.StopAnimation("Offset");
                _containerShape_1.StopAnimation("Offset");
                _containerShape_2.StopAnimation("Offset");
                _containerShape_3.StopAnimation("Offset");
                _containerShape_4.StopAnimation("Offset");
                _containerShape_5.StopAnimation("Scale");
                _containerShape_6.StopAnimation("Scale");
                _containerShape_7.StopAnimation("Scale");
                _root.Properties.StopAnimation("t0");
            }

        }
    }
}
